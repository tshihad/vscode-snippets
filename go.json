{
	// Place your snippets for go here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"standart table driven test":{
		"prefix": "tdtt",
		"body":[
			"func Test$1(t *testing.T) {",
			"\ttestCases := []struct {",
			"\t\tname    string",
			"\t\targs    ${2:args}",
			"\t\tgiven   func(mock ${3:mockService})",
			"\t\twant    ${4:output}",
			"\t\twantErr bool",
			"\t}{",
			"\t\t{",
			"\t\t\tname: \"Normal test case 1 - ${5:description},\",",
			"\t\t\targs: ${6:args},",
			"\t\t\tgiven: func(mock ${3:mockService}) {",
			"\t\t\t\t",
			"\t\t\t},",
			"\t\t\twant:    ${7:want},",
			"\t\t\twantErr: ${8:false},",
			"\t\t},",
			"\t}",
			"\tmock := ${9:mockService}",
			"\tfor _, tc := range testCases {",
			"\t\tt.Run(tc.name, func(t *testing.T) {",
			"\t\t\ttc.given(mock)",
			"\t\t\t$0",
			"\t\t})",
			"\t}",
			"}"
		],
		"description": "Table driven test case as per go standard"
	}
}